[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "User",
  "enabled": 1,
  "modified": "2024-07-22 18:45:45.727082",
  "module": "Face Recognition Login",
  "name": "Collect Model for Face Recognition",
  "script": "frappe.ui.form.on('User', {\n    refresh: function(frm) {\n        if (!frm.is_new()) {\n\n            const collectmodal = `\n                <div class=\"modal fade\" id=\"faceCollectModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                  <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                      <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Collecting Face Models, Please wait...</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </div>\n                      <div class=\"modal-body\">\n                        <div class=\"progress\">\n                          <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\">\n                            0%\n                          </div>\n                        </div>\n                        <br>\n                        <img src=\"/assets/face_recognition_login/img/collect_face_models.gif\" alt=\"Loading...\" class=\"img-fluid\">\n                        <br>\n                        <br>\n                        <h4><b>Move your head</b> at different angles for better accuracy</h4>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n            `\n\n            // Append the collectmodal to body\n            $('body').append(collectmodal);\n\n\n            frm.add_custom_button(__('Collect Face Model'), function() {\n                // Create a new dialog\n                let dialog = new frappe.ui.Dialog({\n                    title: __('Instructions'),\n                    indicator: 'orange',\n                    fields: [\n                        {\n                            fieldtype: 'HTML',\n                            fieldname: 'instructions_html',\n                            options: `\n                                <div>\n                                    <img src=\"/assets/face_recognition_login/img/instructions.png\" alt=\"Instructions Image\" style=\"width: 100%; height: auto;\">\n                                    <p>After clicking OK, please do the following:</p>\n                                    <ol>\n                                        <li><b>Move your head</b> at different angles for better accuracy.</li>\n                                        <li><b>Stare at the camera</b> until we collect the required models for your face.</li>\n                                        <li>A <b>success message</b> will pop up when finished.</li>\n                                    </ol>\n                                    <p style=\"color: red; font-weight: bold;\">Important: Make sure you follow all the steps carefully to ensure the accuracy of the model.</p>\n                                </div>\n                            `\n                        },\n                        {\n                            fieldtype: 'Check',\n                            fieldname: 'accept_instructions',\n                            label: __('I have read and understood the instructions'),\n                            reqd: 1\n                        }\n                    ],\n                    primary_action_label: __('OK'),\n                    primary_action(values) {\n                        if (values.accept_instructions) {\n\n                            const email = frm.doc.name;\n                            if (!email) {\n                                alert(\"Please enter your email first.\");\n                                return;\n                            }\n\n                            $('#faceCollectModal').modal('show');\n\n                            fetch('/api/method/face_recognition_login.api.collect_face_model', {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    'X-Frappe-CSRF-Token': frappe.csrf_token\n                                },\n                                body: JSON.stringify({ user_email: email })\n                            }).then(response => {\n                                return response.json();\n                            }).then(data => {\n                                $('#faceCollectModal').modal('hide');\n                                if (data.status === \"error\") {\n                                    frappe.throw(data.message)\n                                } else {\n                                    frappe.msgprint({\n                                        title: __('Success'),\n                                        indicator: 'green',\n                                        message: String(data.message.message)\n                                    });\n                                }\n                            }).catch(error => {\n                                $('#faceCollectModal').modal('hide');\n                                console.error('Collect Face Model Error:', error);\n                                frappe.throw('An unexpected error occurred. Please try again later.')\n                            });\n\n                            // Start polling for progress\n                            const progressBar = $('#faceCollectModal .progress-bar');\n                            const interval = setInterval(() => {\n                                fetch(`/api/method/face_recognition_login.face_recognition_login.collect_face_model.get_progress?user_email=${email}`)\n                                    .then(response => response.json())\n                                    .then(progress => {\n                                        const progressValue = parseInt(progress.message);\n\n                                        progressBar.css('width', `${progressValue}%`);\n                                        progressBar.attr('aria-valuenow', progressValue);\n                                        progressBar.text(`${progressValue}%`);\n                                        if (progress >= 100) {\n                                            clearInterval(interval);\n                                        }\n                                    });\n                            }, 100); // Poll every second\n\n                            dialog.hide();\n                        } else {\n                            frappe.msgprint(__('Please accept the instructions to proceed.'));\n                        }\n                    }\n                });\n\n                // Show the dialog\n                dialog.show();\n            }).addClass('btn-success');\n        }\n    }\n});\n",
  "view": "Form"
 }
]